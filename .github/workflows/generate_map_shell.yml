name: üó∫Ô∏è Manual - Generate Map Shell

on:
  workflow_dispatch:  # Manual triggering only
    inputs:
      analysis_id:
        description: 'Analysis ID (ULID) to use for map generation'
        required: false
        type: string
        default: ''

jobs:
  generate-map-shell:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout gh-pages branch
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        token: ${{ secrets.PAT_TOKEN }}
    
    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Remove .gitignore rules for outputs (gh-pages only)
      run: |
        # Remove the line that excludes docs/outputs/ files
        # This allows outputs to be committed on gh-pages branch
        sed -i '/^docs\/outputs\/\*$/d' .gitignore
        # Add a comment to indicate this is for gh-pages
        echo "# gh-pages: outputs are allowed to be committed" >> .gitignore
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Generate map shell
      run: |
        # Create the outputs directory
        mkdir -p docs/outputs/
        
        # Check if analysis_id is provided
        ANALYSIS_ID="${{ inputs.analysis_id }}"
        
        if [ -n "$ANALYSIS_ID" ]; then
          echo "üìã Generating map shell for analysis: $ANALYSIS_ID"
          # Generate Leaflet map with specific ULID
          python scripts/generate_map_shell.py data/fire.geojson --analysis-id "$ANALYSIS_ID"
        else
          echo "‚ùå No analysis_id provided"
          echo "üí° Please provide an analysis_id input to generate a map"
          exit 1
        fi
        
    - name: Commit generated files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/outputs/
        ANALYSIS_ID="${{ inputs.analysis_id }}"
        if [ -n "$ANALYSIS_ID" ]; then
          git diff --quiet && git diff --staged --quiet || git commit -m "auto: regenerate map shell for analysis $ANALYSIS_ID"
        else
          git diff --quiet && git diff --staged --quiet || git commit -m "auto: regenerate map shell with default data"
        fi
        git push origin gh-pages --force 