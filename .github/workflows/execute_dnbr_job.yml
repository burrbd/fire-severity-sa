name: 🔥 Manual - Execute dNBR Analysis Job

on:
  workflow_dispatch:

jobs:
  execute-dnbr-job:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history for commit hash
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Execute dNBR analysis job
      id: execute
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DYNAMODB_TABLE_NAME: ${{ secrets.AWS_DYNAMODB_TABLE_NAME }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      run: |
        # Get job type from GitHub variables
        JOB_TYPE="${{ vars.DNBR_JOB_TYPE || 'dummy' }}"
        
        # Execute dNBR analysis job and capture job ID
        echo "🔍 Running script with path: data/dummy_data/fires.geojson"
        script_output=$(python scripts/dnbr_analysis_job.py data/dummy_data/fires.geojson $JOB_TYPE)
        echo "📄 Script output:"
        echo "$script_output"
        
        job_id=$(echo "$script_output" | grep "🔗 Job ID:" | awk '{print $NF}')
        echo "🔍 Extracted job_id: '$job_id'"
        
        # Output job ID for next action
        echo "job_id=$job_id" >> $GITHUB_OUTPUT
        echo "job_type=$JOB_TYPE" >> $GITHUB_OUTPUT
        
        echo "✅ dNBR analysis job executed: $job_id"
        echo "🔧 Job type: $JOB_TYPE"
        echo "📋 Using GitHub Variable: DNBR_JOB_TYPE=$JOB_TYPE"
        
    - name: Show job summary
      run: |
        echo "🎯 dNBR Analysis Job Summary:"
        echo "   Job ID: ${{ steps.execute.outputs.job_id }}"
        echo "   Job type: ${{ steps.execute.outputs.job_type }}"
        echo ""
        echo "📋 Next steps:"
        echo "   1. Run 'Publish dNBR Job to S3' workflow with job ID: ${{ steps.execute.outputs.job_id }}"
        echo "   2. This will publish the data to S3" 